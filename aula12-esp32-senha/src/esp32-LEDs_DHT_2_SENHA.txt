/* ESP32 3 LEDs
*/

#include <DHT.h>

#define LEDRED 25
#define LEDBLUE 26
#define LEDGREEN 27

#define DHTPIN 23
#define DHTMODEL DHT22
DHT dht(DHTPIN, DHTMODEL);

#define SENHA "1234"

String comando = "";            // Armazena o comando completo
bool acendeRed   = false;
bool acendeBlue  = false;
bool acendeGreen = false;

void setup() {
  Serial.begin(115200);
  pinMode(LEDRED, OUTPUT);
  pinMode(LEDBLUE, OUTPUT);
  pinMode(LEDGREEN, OUTPUT);
  dht.begin();
  Serial.println("Digite o comando (ex: RED, GREEN, BLUE): ");
}

void loop() {

  // Enquanto serial estiver disponível, leia caractere a caractere
  while (Serial.available() > 0) {          
    char c = Serial.read();                 
    Serial.print(c);                        

    // Se chegou end-of-line, processa o comando completo
    if (c == '\n' || c == '\r') { // CR ou LF
      comando.trim();  // Remove espaços/brancos
      Serial.print("Você digitou: ");
      Serial.println(comando);

      if (comando == "ADMIN") {
        Serial.println("Digite a senha: ");
	      Serial.setTimeout(5000);  // Define timeout para 5 segundos
        String pass = Serial.readStringUntil('\n');
        Serial.setTimeout(1000);  // Define timeout para 2 segundos
	      pass.trim();

  	    if (pass != SENHA) {
	  	    Serial.println("Senha incorreta. Acesso negado.");
		      Serial.println("Digite o comando (ex: RED, GREEN, BLUE): ");
		      return;
	      }

        // Se a senha estiver correta, acende todos os LEDs e coleta medições do DHT
	      Serial.println("Área Admin: Acesso Liberado. Todos os LEDs acesos.\n");

	      digitalWrite(LEDRED, HIGH);
	      digitalWrite(LEDBLUE, HIGH);
	      digitalWrite(LEDGREEN, HIGH);
	      Serial.println("Coleta de medições de temperatura, umidade e índice de calor em andamento...\n");
	      delay(2000);

        float temp = dht.readTemperature();
        float umid = dht.readHumidity();
        if ( (isnan(temp)) || (isnan(umid)) ) {
          Serial.println("Leitura incorreta.");
          delay(2000);
          return;
        }
        float hic = dht.computeHeatIndex(temp, umid, false);
        
        Serial.printf("Temperatura: %.2f °C - Umidade: %.2f %% - Índice de Calor: %.2f\n", temp, umid, hic);
        Serial.println("");
        delay(3000);
      }

	  // Lógica de acionamento dos LEDs
      acendeRed   = (comando == "RED");
      acendeBlue  = (comando == "BLUE");
      acendeGreen = (comando == "GREEN");

      digitalWrite(LEDRED,   acendeRed   ? HIGH : LOW);
      digitalWrite(LEDBLUE,  acendeBlue  ? HIGH : LOW);
      digitalWrite(LEDGREEN, acendeGreen ? HIGH : LOW);

      delay(1500);
      Serial.println("\nDigite o comando (ex: RED, GREEN, BLUE): ");

      comando = "";  // Reseta o buffer para o próximo comando
    } else {
      comando += c;  // Constrói a string enquanto não chega ENTER
    }
  }

}
